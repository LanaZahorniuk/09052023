Основное различие между ключевыми словами implements и extends в Java заключается в том,
что они используются для наследования различных типов сущностей.


Использование extends
Ключевое слово extends используется в Java для наследования класса. Это означает,
что новый класс создается на основе существующего класса,
унаследовав его свойства и методы.

Пример:
public class Animal {
    public void eat() {
        System.out.println("Animal eats");
    }
}

public class Dog extends Animal {
    public void bark() {
        System.out.println("Dog barks");
    }
}

В этом примере класс Dog расширяет класс Animal, тем самым унаследовав метод eat() от класса Animal.
Теперь у экземпляра класса Dog есть доступ и к методу eat(), и к методу bark().




Использование implements
Ключевое слово implements используется для реализации интерфейса.
Интерфейс в Java — это шаблон, который может содержать только абстрактные методы и константы.

Пример:
interface Playable {
    void play();
}

public class Dog implements Playable {
    public void play() {
        System.out.println("Dog plays");
    }
}

Здесь класс Dog реализует интерфейс Playable, обязуясь предоставить реализацию для всех методов,
объявленных в интерфейсе. В данном случае, класс Dog предоставляет реализацию для метода play().


Когда использовать что?
extends используется, когда есть четкое отношение «является» между классами.
Например, «Собака» является «Животным», поэтому класс Dog может расширить класс Animal.

implements используется, когда класс должен предоставить определенное поведение,
описанное в интерфейсе. Если «Собака» может «играть», то класс Dog может реализовать интерфейс Playable.

Важно помнить, что класс может расширить только один другой класс, но может реализовывать
несколько интерфейсов. Это обусловлено тем, что Java не поддерживает множественное наследование
классов, но поддерживает множественную реализацию интерфейсов.


Вывод
Различие между implements и extends в Java довольно простое:
extends используется для наследования класса,
а implements — для реализации интерфейса.
Отношения между классами и интерфейсами определяют, когда использовать что.